{"version":3,"sources":["App.js","reportWebVitals.js","aws-exports.js","index.js"],"names":["App","_useState","useState","limit","start","_useState2","Object","slicedToArray","input","updateInput","updateInputValues","type","value","objectSpread2","defineProperty","_useState3","_useState4","coins","updateCoins","_useState5","_useState6","loading","setLoading","fetchCoins","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","data","wrap","_context","prev","next","API","get","concat","sent","stop","apply","this","arguments","useEffect","react_default","createElement","className","onChange","e","target","placeholder","onClick","map","key","name","symbol","price_usd","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","awsmobile","aws_project_region","aws_cloud_logic_custom","endpoint","region","Amplify","configure","config","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"iTAyEeA,UAjEH,WAGV,IAAAC,EAA6BC,mBAAS,CAAEC,MAAO,EAAGC,MAAO,IAAzDC,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GAAOO,EAAPH,EAAA,GAAcI,EAAdJ,EAAA,GAGMK,EAAoB,SAACC,EAAMC,GAC/BH,EAAYH,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAA,GAAKE,GAAN,GAAAF,OAAAQ,EAAA,EAAAR,CAAA,GAAcK,EAAOC,MAIlCG,EAA6Bb,mBAAS,IAAtCc,EAAAV,OAAAC,EAAA,EAAAD,CAAAS,EAAA,GAAOE,EAAPD,EAAA,GAAcE,EAAdF,EAAA,GAEAG,EAA8BjB,oBAAS,GAAvCkB,EAAAd,OAAAC,EAAA,EAAAD,CAAAa,EAAA,GAAOE,EAAPD,EAAA,GAAgBE,EAAhBF,EAAA,GAGMG,EAAU,eAAAC,EAAAlB,OAAAmB,EAAA,EAAAnB,CAAAoB,EAAAC,EAAAC,KAAG,SAAAC,IAAA,IAAA1B,EAAAC,EAAA0B,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEjBZ,GAAW,GAEHnB,EAAiBK,EAAjBL,MAAOC,EAAUI,EAAVJ,MAJE4B,EAAAE,KAAA,EAKEC,IAAIC,IAAI,YAAR,gBAAAC,OAAqClC,EAArC,WAAAkC,OAAoDjC,IALtD,OAKX0B,EALWE,EAAAM,KAMjBpB,EAAYY,EAAKb,OAEjBK,GAAW,GARM,wBAAAU,EAAAO,SAAAV,MAAH,yBAAAL,EAAAgB,MAAAC,KAAAC,YAAA,GAgBhB,OAJAC,oBAAU,WACRpB,KACC,IAGDqB,EAAAjB,EAAAkB,cAAA,OAAKC,UAAU,OAEZzB,GAAWuB,EAAAjB,EAAAkB,cAAA,yBAEVxB,GAAWuB,EAAAjB,EAAAkB,cAAA,WACXD,EAAAjB,EAAAkB,cAAA,SACEE,SAAU,SAAAC,GAAC,OAAItC,EAAkB,QAASsC,EAAEC,OAAOrC,QACnDsC,YAAY,kBAEdN,EAAAjB,EAAAkB,cAAA,SACEK,YAAY,yBACZH,SAAU,SAAAC,GAAC,OAAItC,EAAkB,QAASsC,EAAEC,OAAOrC,UAGrDgC,EAAAjB,EAAAkB,cAAA,UAAQM,QAAS5B,GAAjB,eAGEN,EAAMmC,IAAI,SAACnC,GAAD,OACR2B,EAAAjB,EAAAkB,cAAA,OAAKQ,IAAKpC,EAAMqC,MACdV,EAAAjB,EAAAkB,cAAA,UAAK5B,EAAMqC,KAAX,MAAoBrC,EAAMsC,QAC1BX,EAAAjB,EAAAkB,cAAA,cAAM5B,EAAMuC,kBCjDXC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAZ,EAAA,GAAAa,KAAAD,EAAAE,KAAA,WAAqBD,KAAK,SAAArC,GAAiD,IAA9CuC,EAA8CvC,EAA9CuC,OAAQC,EAAsCxC,EAAtCwC,OAAQC,EAA8BzC,EAA9ByC,OAAQC,EAAsB1C,EAAtB0C,OAAQC,EAAc3C,EAAd2C,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCQCU,EAZG,CACdC,mBAAsB,YACtBC,uBAA0B,CACtB,CACIhB,KAAQ,YACRiB,SAAY,6DACZC,OAAU,qBCDtBC,QAAQC,UAAUC,GAElBC,IAASC,OACPjC,EAAAjB,EAAAkB,cAACD,EAAAjB,EAAMmD,WAAP,KACElC,EAAAjB,EAAAkB,cAACkC,EAAD,OAEFC,SAASC,eAAe,SAM1BxB","file":"static/js/main.af509820.chunk.js","sourcesContent":["// Import useState and useEffect hooks from React\nimport React, { useState, useEffect } from 'react'\n\n// Import the API category from AWS Amplify\nimport { API } from 'aws-amplify'\n\nimport './App.css';\n\nconst App = () => {\n\n  // Create additional state to hold user input for limit and start properties\n  const [input, updateInput] = useState({ limit: 5, start: 0 })\n\n  // Create a new function to allow users to update the input values\n  const updateInputValues = (type, value) => {\n    updateInput({ ...input, [type]: value }); \n  };\n\n  // Create coins variable and set to empty array\n  const [coins, updateCoins] = useState([]);\n\n  const [loading, setLoading] = useState(true);\n\n  // Define function to all API\n  const fetchCoins = async () => {\n\n    setLoading(true);\n\n    const { limit, start } = input\n    const data = await API.get('cryptoapi', `/coins?limit=${limit}&start=${start}`);\n    updateCoins(data.coins);\n\n    setLoading(false);\n  };\n\n  // Call fetchCoins function when component loads\n  useEffect(() => {\n    fetchCoins();\n  }, []);\n\n  return (\n    <div className=\"App\">\n\n      {loading && <h2>Loading...</h2>}\n\n      {!loading && <div>\n        <input\n          onChange={e => updateInputValues('limit', e.target.value)}\n          placeholder=\"Enter a limit\"\n        />\n        <input\n          placeholder=\"Enter a starting value\"\n          onChange={e => updateInputValues('start', e.target.value)}\n        />\n\n        <button onClick={fetchCoins}>Fetch Coins</button>\n\n        {\n          coins.map((coins) => (\n            <div key={coins.name}>\n              <h2>{coins.name} - {coins.symbol}</h2>\n              <h5>${coins.price_usd}</h5>\n            </div>\n          ))\n        }\n      </div>\n    }\n\n      \n    </div>\n  );\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable */\n// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-east-2\",\n    \"aws_cloud_logic_custom\": [\n        {\n            \"name\": \"cryptoapi\",\n            \"endpoint\": \"https://lwkcc31jdc.execute-api.us-east-2.amazonaws.com/dev\",\n            \"region\": \"us-east-2\"\n        }\n    ]\n};\n\n\nexport default awsmobile;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport Amplify from 'aws-amplify';\nimport config from './aws-exports';\nAmplify.configure(config);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}